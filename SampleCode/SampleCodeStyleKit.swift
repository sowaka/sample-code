//
//  SampleCodeStyleKit.swift
//  SampleCode
//
//  Created by Takeshi Oogami on 2015/09/20.
//  Copyright (c) 2015 bigod. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class SampleCodeStyleKit : NSObject {

    //// Drawing Methods

    public class func drawArrow(value: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Variable Declarations
        let uppperAngle: CGFloat = 45 - value * 45
        let lowerAngle: CGFloat = -45 + value * 45
        let posX: CGFloat = 20 + value * 10
        let strokeColor = UIColor(red: 1, green: 1, blue: 1, alpha: 1 - value)

        //// upper Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, (posX - 10), 12)
        CGContextRotateCTM(context, -uppperAngle * CGFloat(M_PI) / 180)

        let upperPath = UIBezierPath()
        upperPath.moveToPoint(CGPointMake(0, -10))
        upperPath.addLineToPoint(CGPointMake(0, 0))
        upperPath.lineCapStyle = .Round;

        strokeColor.setStroke()
        upperPath.lineWidth = 2
        upperPath.stroke()

        CGContextRestoreGState(context)


        //// lower Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, (posX - 10), 12)
        CGContextRotateCTM(context, -lowerAngle * CGFloat(M_PI) / 180)

        let lowerPath = UIBezierPath()
        lowerPath.moveToPoint(CGPointMake(0, 0))
        lowerPath.addLineToPoint(CGPointMake(0, 10))
        lowerPath.lineCapStyle = .Round;

        strokeColor.setStroke()
        lowerPath.lineWidth = 2
        lowerPath.stroke()

        CGContextRestoreGState(context)
    }

    public class func drawHeart(value: CGFloat, isFavorite: Bool) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Variable Declarations
        let strokeColor = UIColor(red: 1, green: 1, blue: 1, alpha: 1 - value)
        let heartPosX: CGFloat = 22 + value * 20
        let heartScaleX: CGFloat = 1 - value

        //// heart stroke Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, heartPosX, 22)
        CGContextScaleCTM(context, heartScaleX, 1)

        let heartStrokePath = UIBezierPath()
        heartStrokePath.moveToPoint(CGPointMake(7.71, -3.32))
        heartStrokePath.addCurveToPoint(CGPointMake(5.41, -5.61), controlPoint1: CGPointMake(7.31, -4.29), controlPoint2: CGPointMake(6.51, -5.1))
        heartStrokePath.addCurveToPoint(CGPointMake(2.41, -5.83), controlPoint1: CGPointMake(4.43, -6.05), controlPoint2: CGPointMake(3.37, -6.11))
        heartStrokePath.addCurveToPoint(CGPointMake(-0, -3.96), controlPoint1: CGPointMake(1.46, -5.56), controlPoint2: CGPointMake(0.59, -4.82))
        heartStrokePath.addCurveToPoint(CGPointMake(-2.41, -5.83), controlPoint1: CGPointMake(-0.59, -4.82), controlPoint2: CGPointMake(-1.46, -5.56))
        heartStrokePath.addCurveToPoint(CGPointMake(-5.41, -5.61), controlPoint1: CGPointMake(-3.37, -6.11), controlPoint2: CGPointMake(-4.43, -6.05))
        heartStrokePath.addCurveToPoint(CGPointMake(-7.71, -3.32), controlPoint1: CGPointMake(-6.51, -5.1), controlPoint2: CGPointMake(-7.31, -4.29))
        heartStrokePath.addCurveToPoint(CGPointMake(-7.61, -0.11), controlPoint1: CGPointMake(-8.11, -2.35), controlPoint2: CGPointMake(-8.11, -1.22))
        heartStrokePath.addCurveToPoint(CGPointMake(-0, 8), controlPoint1: CGPointMake(-6.53, 2.29), controlPoint2: CGPointMake(-0.03, 7.9))
        heartStrokePath.addCurveToPoint(CGPointMake(7.61, -0.11), controlPoint1: CGPointMake(0.03, 7.9), controlPoint2: CGPointMake(6.53, 2.29))
        heartStrokePath.addCurveToPoint(CGPointMake(7.71, -3.32), controlPoint1: CGPointMake(8.11, -1.22), controlPoint2: CGPointMake(8.11, -2.35))
        heartStrokePath.closePath()
        heartStrokePath.miterLimit = 4;

        heartStrokePath.lineJoinStyle = .Round;

        strokeColor.setStroke()
        heartStrokePath.lineWidth = 1
        heartStrokePath.stroke()

        CGContextRestoreGState(context)


        if (isFavorite) {
            //// heart fill Drawing
            CGContextSaveGState(context)
            CGContextTranslateCTM(context, heartPosX, 22)
            CGContextScaleCTM(context, heartScaleX, 1)

            let heartFillPath = UIBezierPath()
            heartFillPath.moveToPoint(CGPointMake(7.71, -3.32))
            heartFillPath.addCurveToPoint(CGPointMake(5.41, -5.61), controlPoint1: CGPointMake(7.31, -4.29), controlPoint2: CGPointMake(6.51, -5.1))
            heartFillPath.addCurveToPoint(CGPointMake(2.41, -5.83), controlPoint1: CGPointMake(4.43, -6.05), controlPoint2: CGPointMake(3.37, -6.11))
            heartFillPath.addCurveToPoint(CGPointMake(-0, -3.96), controlPoint1: CGPointMake(1.46, -5.56), controlPoint2: CGPointMake(0.59, -4.82))
            heartFillPath.addCurveToPoint(CGPointMake(-2.41, -5.83), controlPoint1: CGPointMake(-0.59, -4.82), controlPoint2: CGPointMake(-1.46, -5.56))
            heartFillPath.addCurveToPoint(CGPointMake(-5.41, -5.61), controlPoint1: CGPointMake(-3.37, -6.11), controlPoint2: CGPointMake(-4.43, -6.05))
            heartFillPath.addCurveToPoint(CGPointMake(-7.71, -3.32), controlPoint1: CGPointMake(-6.51, -5.1), controlPoint2: CGPointMake(-7.31, -4.29))
            heartFillPath.addCurveToPoint(CGPointMake(-7.61, -0.11), controlPoint1: CGPointMake(-8.11, -2.35), controlPoint2: CGPointMake(-8.11, -1.22))
            heartFillPath.addCurveToPoint(CGPointMake(-0, 8), controlPoint1: CGPointMake(-6.53, 2.29), controlPoint2: CGPointMake(-0.03, 7.9))
            heartFillPath.addCurveToPoint(CGPointMake(7.61, -0.11), controlPoint1: CGPointMake(0.03, 7.9), controlPoint2: CGPointMake(6.53, 2.29))
            heartFillPath.addCurveToPoint(CGPointMake(7.71, -3.32), controlPoint1: CGPointMake(8.11, -1.22), controlPoint2: CGPointMake(8.11, -2.35))
            heartFillPath.closePath()
            heartFillPath.miterLimit = 4;

            heartFillPath.lineJoinStyle = .Round;

            strokeColor.setFill()
            heartFillPath.fill()
            strokeColor.setStroke()
            heartFillPath.lineWidth = 1
            heartFillPath.stroke()

            CGContextRestoreGState(context)
        }
    }

}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
